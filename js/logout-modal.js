// =========================================
// SYST√àME DE MODALE DE D√âCONNEXION
// =========================================

class LogoutModal {
  constructor() {
    this.overlay = null;
    this.init();
  }

  init() {
    // Cr√©er la structure HTML de la modale
    this.createModal();
  }

  createModal() {
    // Cr√©er l'overlay
    this.overlay = document.createElement('div');
    this.overlay.className = 'logout-modal-overlay';
    this.overlay.id = 'logout-modal-overlay';
    
    this.overlay.innerHTML = `
      <div class="logout-modal">
        <div class="logout-modal-icon">
          üëã
        </div>
        <h2 class="logout-modal-title">Se d√©connecter ?</h2>
        <p class="logout-modal-message">
          Vous √™tes sur le point de vous d√©connecter de votre compte. 
          Vous pourrez vous reconnecter √† tout moment.
        </p>
        <div class="logout-modal-actions">
          <button class="logout-modal-btn logout-modal-btn-cancel" id="logout-cancel-btn">
            Annuler
          </button>
          <button class="logout-modal-btn logout-modal-btn-confirm" id="logout-confirm-btn">
            Se d√©connecter
          </button>
        </div>
      </div>
    `;

    document.body.appendChild(this.overlay);

    // √âv√©nements
    this.setupEvents();
  }

  setupEvents() {
    // Fermer au clic sur l'overlay
    this.overlay.addEventListener('click', (e) => {
      if (e.target === this.overlay) {
        this.close();
      }
    });

    // Bouton annuler
    document.getElementById('logout-cancel-btn').addEventListener('click', () => {
      this.close();
    });

    // Bouton confirmer
    document.getElementById('logout-confirm-btn').addEventListener('click', () => {
      this.confirm();
    });

    // √âchap pour fermer
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && this.overlay.classList.contains('active')) {
        this.close();
      }
    });
  }

  open() {
    this.overlay.classList.add('active');
    document.body.style.overflow = 'hidden';
  }

  close() {
    this.overlay.classList.remove('active');
    document.body.style.overflow = '';
  }

  async confirm() {
    const confirmBtn = document.getElementById('logout-confirm-btn');
    
    // Animation de chargement
    confirmBtn.classList.add('loading');
    confirmBtn.textContent = 'D√©connexion...';

    try {
      // Appeler la fonction de d√©connexion
      const result = await AuthSystem.logout();

      if (result.success) {
        // Fermer la modale
        this.close();
        
        // Afficher l'animation de succ√®s
        this.showSuccess();

        // Rediriger apr√®s 1.5 secondes
        setTimeout(() => {
          window.location.href = '/';
        }, 1500);
      } else {
        throw new Error(result.message);
      }

    } catch (error) {
      console.error('Erreur d√©connexion:', error);
      
      // Retirer le chargement
      confirmBtn.classList.remove('loading');
      confirmBtn.textContent = 'Se d√©connecter';
      
      // Afficher l'erreur
      alert('‚ùå ' + (error.message || 'Erreur lors de la d√©connexion'));
    }
  }

  showSuccess() {
    const successDiv = document.createElement('div');
    successDiv.className = 'logout-success';
    successDiv.innerHTML = `
      <div class="logout-success-icon">‚úì</div>
      <h3 class="logout-success-title">√Ä bient√¥t !</h3>
      <p class="logout-success-message">Vous avez √©t√© d√©connect√© avec succ√®s</p>
    `;

    document.body.appendChild(successDiv);

    // Animer l'apparition
    setTimeout(() => {
      successDiv.classList.add('active');
    }, 100);

    // Retirer apr√®s la redirection
    setTimeout(() => {
      successDiv.remove();
    }, 2000);
  }
}

// Cr√©er une instance globale
window.LogoutModal = new LogoutModal();

console.log('‚úÖ Logout Modal charg√©');